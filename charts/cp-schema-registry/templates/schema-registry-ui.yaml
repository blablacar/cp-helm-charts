apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if .Values.ui.annotations }}
  annotations: {{ toYaml .Values.ui.annotations | nindent 4 }}
  {{- end}}
  labels:
    app: {{ template "cp-schema-registry.fullname" . }}
    {{- if .Values.ui.labels }}
{{ toYaml .Values.ui.labels | indent 4}}
    {{- end}}
  name: {{ template "cp-schema-registry.fullname" . }}-ui
spec:
  replicas: {{ .Values.ui.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "cp-schema-registry.fullname" . }}
      service: schema-registry-ui
  template:
    metadata:
      {{- if .Values.ui.annotations }}
      annotations: {{ toYaml .Values.ui.annotations | nindent 8 }}
      {{- end }}
      labels:
        app: {{ template "cp-schema-registry.fullname" . }}
        service: schema-registry-ui
        {{- if .Values.ui.labels }}
{{ toYaml .Values.ui.labels | indent 8}}
        {{- end}}
    spec:
      {{- if .Values.securityContext }}
      securityContext: {{ toYaml .Values.securityContext | nindent 8 }}
      {{- end}}
      containers:
        - image: eu.gcr.io/infra-sandbox-58fe57e9/schema-registry-ui:ui_0.9.5_caddy_v2.6.4
          imagePullPolicy: IfNotPresent
          name: ui
          ports:
            - containerPort: 8000
              protocol: TCP
          resources: {{ toYaml .Values.ui.resources | nindent 12 }}
          volumeMounts:
            - name: schema-registry-ui-configuration
              mountPath: /tmp
      volumes:
        - name: schema-registry-ui-configuration
          configMap:
            name: {{ template "cp-schema-registry.fullname" . }}-ui-configmap
            items:
              - key: env.js
                path: env.js
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "cp-schema-registry.fullname" . }}-ui-configmap
  labels:
    app: {{ template "cp-schema-registry.name" . }}
    chart: {{ template "cp-schema-registry.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  env.js: |+
    var clusters = [
      {
        NAME: {{ template "cp-schema-registry.fullname" . | quote }},
        SCHEMA_REGISTRY: {{ template  "cp-schema-registry.connectUrlValue" . | quote }},
        allowTransitiveCompatibilities: true
      }
    ];
---
apiVersion: v1
kind: Service
metadata:
  {{- if .Values.ui.annotations }}
  annotations: {{ toYaml .Values.ui.annotations | nindent 4 }}
  {{- end}}
  labels:
    app: {{ template "cp-schema-registry.fullname" . }}
    {{- if .Values.ui.labels }}
{{ toYaml .Values.ui.labels | indent 4 }}
    {{- end}}
  name: {{ template "cp-schema-registry.fullname" . }}-ui
spec:
  ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app: {{ template "cp-schema-registry.fullname" . }}
    service: schema-registry-ui
  type: ClusterIP
